// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: contribution.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Reward_RewardKind int32

const (
	Reward_UNKNOWN  Reward_RewardKind = 0
	Reward_DONATION Reward_RewardKind = 1
)

// Enum value maps for Reward_RewardKind.
var (
	Reward_RewardKind_name = map[int32]string{
		0: "UNKNOWN",
		1: "DONATION",
	}
	Reward_RewardKind_value = map[string]int32{
		"UNKNOWN":  0,
		"DONATION": 1,
	}
)

func (x Reward_RewardKind) Enum() *Reward_RewardKind {
	p := new(Reward_RewardKind)
	*p = x
	return p
}

func (x Reward_RewardKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reward_RewardKind) Descriptor() protoreflect.EnumDescriptor {
	return file_contribution_proto_enumTypes[0].Descriptor()
}

func (Reward_RewardKind) Type() protoreflect.EnumType {
	return &file_contribution_proto_enumTypes[0]
}

func (x Reward_RewardKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reward_RewardKind.Descriptor instead.
func (Reward_RewardKind) EnumDescriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{5, 0}
}

type AuthorContribution_ContributionType int32

const (
	AuthorContribution_CONTRIBUTION_TYPE_UNKNOWN AuthorContribution_ContributionType = 0
	AuthorContribution_CHUNK                     AuthorContribution_ContributionType = 1
	AuthorContribution_CHANGE                    AuthorContribution_ContributionType = 2
)

// Enum value maps for AuthorContribution_ContributionType.
var (
	AuthorContribution_ContributionType_name = map[int32]string{
		0: "CONTRIBUTION_TYPE_UNKNOWN",
		1: "CHUNK",
		2: "CHANGE",
	}
	AuthorContribution_ContributionType_value = map[string]int32{
		"CONTRIBUTION_TYPE_UNKNOWN": 0,
		"CHUNK":                     1,
		"CHANGE":                    2,
	}
)

func (x AuthorContribution_ContributionType) Enum() *AuthorContribution_ContributionType {
	p := new(AuthorContribution_ContributionType)
	*p = x
	return p
}

func (x AuthorContribution_ContributionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorContribution_ContributionType) Descriptor() protoreflect.EnumDescriptor {
	return file_contribution_proto_enumTypes[1].Descriptor()
}

func (AuthorContribution_ContributionType) Type() protoreflect.EnumType {
	return &file_contribution_proto_enumTypes[1]
}

func (x AuthorContribution_ContributionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorContribution_ContributionType.Descriptor instead.
func (AuthorContribution_ContributionType) EnumDescriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{15, 0}
}

// NEW rankings
type ListAuthorRanksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter        string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	SortField     string `protobuf:"bytes,2,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection string `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
	Page          int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListAuthorRanksRequest) Reset() {
	*x = ListAuthorRanksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthorRanksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorRanksRequest) ProtoMessage() {}

func (x *ListAuthorRanksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorRanksRequest.ProtoReflect.Descriptor instead.
func (*ListAuthorRanksRequest) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{0}
}

func (x *ListAuthorRanksRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAuthorRanksRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListAuthorRanksRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListAuthorRanksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAuthorRanksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AuthorRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rankings []*AuthorRank `protobuf:"bytes,1,rep,name=rankings,proto3" json:"rankings,omitempty"`
}

func (x *AuthorRankList) Reset() {
	*x = AuthorRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorRankList) ProtoMessage() {}

func (x *AuthorRankList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorRankList.ProtoReflect.Descriptor instead.
func (*AuthorRankList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorRankList) GetRankings() []*AuthorRank {
	if x != nil {
		return x.Rankings
	}
	return nil
}

type AuthorRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author          *Author `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	ApprovedChunks  int32   `protobuf:"varint,2,opt,name=approved_chunks,json=approvedChunks,proto3" json:"approved_chunks,omitempty"`
	ApprovedChanges int32   `protobuf:"varint,3,opt,name=approved_changes,json=approvedChanges,proto3" json:"approved_changes,omitempty"`
	RewardValueUsd  float32 `protobuf:"fixed32,4,opt,name=reward_value_usd,json=rewardValueUsd,proto3" json:"reward_value_usd,omitempty"`
	Points          float32 `protobuf:"fixed32,5,opt,name=points,proto3" json:"points,omitempty"`
	CurrentRank     *Rank   `protobuf:"bytes,6,opt,name=current_rank,json=currentRank,proto3" json:"current_rank,omitempty"`
	NextRank        *Rank   `protobuf:"bytes,7,opt,name=next_rank,json=nextRank,proto3" json:"next_rank,omitempty"`
}

func (x *AuthorRank) Reset() {
	*x = AuthorRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorRank) ProtoMessage() {}

func (x *AuthorRank) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorRank.ProtoReflect.Descriptor instead.
func (*AuthorRank) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorRank) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *AuthorRank) GetApprovedChunks() int32 {
	if x != nil {
		return x.ApprovedChunks
	}
	return 0
}

func (x *AuthorRank) GetApprovedChanges() int32 {
	if x != nil {
		return x.ApprovedChanges
	}
	return 0
}

func (x *AuthorRank) GetRewardValueUsd() float32 {
	if x != nil {
		return x.RewardValueUsd
	}
	return 0
}

func (x *AuthorRank) GetPoints() float32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AuthorRank) GetCurrentRank() *Rank {
	if x != nil {
		return x.CurrentRank
	}
	return nil
}

func (x *AuthorRank) GetNextRank() *Rank {
	if x != nil {
		return x.NextRank
	}
	return nil
}

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Points float32 `protobuf:"fixed32,3,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{3}
}

func (x *Rank) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rank) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rank) GetPoints() float32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type PendingRewardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *PendingRewardList) Reset() {
	*x = PendingRewardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingRewardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingRewardList) ProtoMessage() {}

func (x *PendingRewardList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingRewardList.ProtoReflect.Descriptor instead.
func (*PendingRewardList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{4}
}

func (x *PendingRewardList) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind          Reward_RewardKind `protobuf:"varint,2,opt,name=kind,proto3,enum=rsk.Reward_RewardKind" json:"kind,omitempty"`
	Name          string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Criteria      string            `protobuf:"bytes,4,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Value         float32           `protobuf:"fixed32,5,opt,name=value,proto3" json:"value,omitempty"`
	ValueCurrency string            `protobuf:"bytes,6,opt,name=value_currency,json=valueCurrency,proto3" json:"value_currency,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{5}
}

func (x *Reward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Reward) GetKind() Reward_RewardKind {
	if x != nil {
		return x.Kind
	}
	return Reward_UNKNOWN
}

func (x *Reward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Reward) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *Reward) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Reward) GetValueCurrency() string {
	if x != nil {
		return x.ValueCurrency
	}
	return ""
}

type ClaimRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Args:
	//
	//	*ClaimRewardRequest_DonationArgs
	Args isClaimRewardRequest_Args `protobuf_oneof:"args"`
}

func (x *ClaimRewardRequest) Reset() {
	*x = ClaimRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRewardRequest) ProtoMessage() {}

func (x *ClaimRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRewardRequest.ProtoReflect.Descriptor instead.
func (*ClaimRewardRequest) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{6}
}

func (x *ClaimRewardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ClaimRewardRequest) GetArgs() isClaimRewardRequest_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (x *ClaimRewardRequest) GetDonationArgs() *DonationArgs {
	if x, ok := x.GetArgs().(*ClaimRewardRequest_DonationArgs); ok {
		return x.DonationArgs
	}
	return nil
}

type isClaimRewardRequest_Args interface {
	isClaimRewardRequest_Args()
}

type ClaimRewardRequest_DonationArgs struct {
	DonationArgs *DonationArgs `protobuf:"bytes,2,opt,name=donation_args,json=donationArgs,proto3,oneof"`
}

func (*ClaimRewardRequest_DonationArgs) isClaimRewardRequest_Args() {}

type DonationArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *DonationArgs) Reset() {
	*x = DonationArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationArgs) ProtoMessage() {}

func (x *DonationArgs) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationArgs.ProtoReflect.Descriptor instead.
func (*DonationArgs) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{7}
}

func (x *DonationArgs) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

type ListDonationRecipientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId string `protobuf:"bytes,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
}

func (x *ListDonationRecipientsRequest) Reset() {
	*x = ListDonationRecipientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDonationRecipientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDonationRecipientsRequest) ProtoMessage() {}

func (x *ListDonationRecipientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDonationRecipientsRequest.ProtoReflect.Descriptor instead.
func (*ListDonationRecipientsRequest) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{8}
}

func (x *ListDonationRecipientsRequest) GetRewardId() string {
	if x != nil {
		return x.RewardId
	}
	return ""
}

type DonationRecipientList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*DonationRecipient `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
}

func (x *DonationRecipientList) Reset() {
	*x = DonationRecipientList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationRecipientList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationRecipientList) ProtoMessage() {}

func (x *DonationRecipientList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationRecipientList.ProtoReflect.Descriptor instead.
func (*DonationRecipientList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{9}
}

func (x *DonationRecipientList) GetOrganizations() []*DonationRecipient {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type DonationRecipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mission string `protobuf:"bytes,3,opt,name=mission,proto3" json:"mission,omitempty"`
	LogoUrl string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	NgoId   string `protobuf:"bytes,5,opt,name=ngo_id,json=ngoId,proto3" json:"ngo_id,omitempty"`
	Url     string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Quote   string `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`
}

func (x *DonationRecipient) Reset() {
	*x = DonationRecipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationRecipient) ProtoMessage() {}

func (x *DonationRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationRecipient.ProtoReflect.Descriptor instead.
func (*DonationRecipient) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{10}
}

func (x *DonationRecipient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DonationRecipient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DonationRecipient) GetMission() string {
	if x != nil {
		return x.Mission
	}
	return ""
}

func (x *DonationRecipient) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *DonationRecipient) GetNgoId() string {
	if x != nil {
		return x.NgoId
	}
	return ""
}

func (x *DonationRecipient) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DonationRecipient) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

type ClaimedRewardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*ClaimedReward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *ClaimedRewardList) Reset() {
	*x = ClaimedRewardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimedRewardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimedRewardList) ProtoMessage() {}

func (x *ClaimedRewardList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimedRewardList.ProtoReflect.Descriptor instead.
func (*ClaimedRewardList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{11}
}

func (x *ClaimedRewardList) GetRewards() []*ClaimedReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ClaimedReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClaimKind        string  `protobuf:"bytes,2,opt,name=claim_kind,json=claimKind,proto3" json:"claim_kind,omitempty"`
	ClaimValue       float32 `protobuf:"fixed32,3,opt,name=claim_value,json=claimValue,proto3" json:"claim_value,omitempty"`
	ClaimCurrency    string  `protobuf:"bytes,4,opt,name=claim_currency,json=claimCurrency,proto3" json:"claim_currency,omitempty"`
	ClaimDescription string  `protobuf:"bytes,5,opt,name=claim_description,json=claimDescription,proto3" json:"claim_description,omitempty"`
	ClaimAt          string  `protobuf:"bytes,6,opt,name=claim_at,json=claimAt,proto3" json:"claim_at,omitempty"`
}

func (x *ClaimedReward) Reset() {
	*x = ClaimedReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimedReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimedReward) ProtoMessage() {}

func (x *ClaimedReward) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimedReward.ProtoReflect.Descriptor instead.
func (*ClaimedReward) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{12}
}

func (x *ClaimedReward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClaimedReward) GetClaimKind() string {
	if x != nil {
		return x.ClaimKind
	}
	return ""
}

func (x *ClaimedReward) GetClaimValue() float32 {
	if x != nil {
		return x.ClaimValue
	}
	return 0
}

func (x *ClaimedReward) GetClaimCurrency() string {
	if x != nil {
		return x.ClaimCurrency
	}
	return ""
}

func (x *ClaimedReward) GetClaimDescription() string {
	if x != nil {
		return x.ClaimDescription
	}
	return ""
}

func (x *ClaimedReward) GetClaimAt() string {
	if x != nil {
		return x.ClaimAt
	}
	return ""
}

type ListAuthorContributionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter        string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	SortField     string `protobuf:"bytes,2,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection string `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
	Page          int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListAuthorContributionsRequest) Reset() {
	*x = ListAuthorContributionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthorContributionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorContributionsRequest) ProtoMessage() {}

func (x *ListAuthorContributionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorContributionsRequest.ProtoReflect.Descriptor instead.
func (*ListAuthorContributionsRequest) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{13}
}

func (x *ListAuthorContributionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAuthorContributionsRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListAuthorContributionsRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListAuthorContributionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAuthorContributionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AuthorContributionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contributions []*AuthorContribution `protobuf:"bytes,1,rep,name=contributions,proto3" json:"contributions,omitempty"`
}

func (x *AuthorContributionList) Reset() {
	*x = AuthorContributionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorContributionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorContributionList) ProtoMessage() {}

func (x *AuthorContributionList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorContributionList.ProtoReflect.Descriptor instead.
func (*AuthorContributionList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{14}
}

func (x *AuthorContributionList) GetContributions() []*AuthorContribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type AuthorContribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EpisodeId        string                              `protobuf:"bytes,2,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	ContributionType AuthorContribution_ContributionType `protobuf:"varint,3,opt,name=contribution_type,json=contributionType,proto3,enum=rsk.AuthorContribution_ContributionType" json:"contribution_type,omitempty"`
	Author           *Author                             `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	Points           float32                             `protobuf:"fixed32,8,opt,name=points,proto3" json:"points,omitempty"`
	CreatedAt        string                              `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *AuthorContribution) Reset() {
	*x = AuthorContribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorContribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorContribution) ProtoMessage() {}

func (x *AuthorContribution) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorContribution.ProtoReflect.Descriptor instead.
func (*AuthorContribution) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{15}
}

func (x *AuthorContribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthorContribution) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

func (x *AuthorContribution) GetContributionType() AuthorContribution_ContributionType {
	if x != nil {
		return x.ContributionType
	}
	return AuthorContribution_CONTRIBUTION_TYPE_UNKNOWN
}

func (x *AuthorContribution) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *AuthorContribution) GetPoints() float32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AuthorContribution) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DonationStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats []*RecipientStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *DonationStats) Reset() {
	*x = DonationStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationStats) ProtoMessage() {}

func (x *DonationStats) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationStats.ProtoReflect.Descriptor instead.
func (*DonationStats) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{16}
}

func (x *DonationStats) GetStats() []*RecipientStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type RecipientStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DonationRecipient string  `protobuf:"bytes,1,opt,name=donation_recipient,json=donationRecipient,proto3" json:"donation_recipient,omitempty"`
	PointsSpent       float32 `protobuf:"fixed32,2,opt,name=points_spent,json=pointsSpent,proto3" json:"points_spent,omitempty"`
	DonatedAmountUsd  float32 `protobuf:"fixed32,3,opt,name=donated_amount_usd,json=donatedAmountUsd,proto3" json:"donated_amount_usd,omitempty"`
}

func (x *RecipientStats) Reset() {
	*x = RecipientStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientStats) ProtoMessage() {}

func (x *RecipientStats) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientStats.ProtoReflect.Descriptor instead.
func (*RecipientStats) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{17}
}

func (x *RecipientStats) GetDonationRecipient() string {
	if x != nil {
		return x.DonationRecipient
	}
	return ""
}

func (x *RecipientStats) GetPointsSpent() float32 {
	if x != nil {
		return x.PointsSpent
	}
	return 0
}

func (x *RecipientStats) GetDonatedAmountUsd() float32 {
	if x != nil {
		return x.DonatedAmountUsd
	}
	return 0
}

type ListIncomingDonationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListIncomingDonationsRequest) Reset() {
	*x = ListIncomingDonationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIncomingDonationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIncomingDonationsRequest) ProtoMessage() {}

func (x *ListIncomingDonationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIncomingDonationsRequest.ProtoReflect.Descriptor instead.
func (*ListIncomingDonationsRequest) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{18}
}

type IncomingDonationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Donations []*IncomingDonation `protobuf:"bytes,1,rep,name=donations,proto3" json:"donations,omitempty"`
}

func (x *IncomingDonationList) Reset() {
	*x = IncomingDonationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingDonationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingDonationList) ProtoMessage() {}

func (x *IncomingDonationList) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingDonationList.ProtoReflect.Descriptor instead.
func (*IncomingDonationList) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{19}
}

func (x *IncomingDonationList) GetDonations() []*IncomingDonation {
	if x != nil {
		return x.Donations
	}
	return nil
}

type IncomingDonation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount         float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountCurrency string  `protobuf:"bytes,3,opt,name=amount_currency,json=amountCurrency,proto3" json:"amount_currency,omitempty"`
	Note           string  `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *IncomingDonation) Reset() {
	*x = IncomingDonation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contribution_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingDonation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingDonation) ProtoMessage() {}

func (x *IncomingDonation) ProtoReflect() protoreflect.Message {
	mi := &file_contribution_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingDonation.ProtoReflect.Descriptor instead.
func (*IncomingDonation) Descriptor() ([]byte, []int) {
	return file_contribution_proto_rawDescGZIP(), []int{20}
}

func (x *IncomingDonation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IncomingDonation) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IncomingDonation) GetAmountCurrency() string {
	if x != nil {
		return x.AmountCurrency
	}
	return ""
}

func (x *IncomingDonation) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

var File_contribution_proto protoreflect.FileDescriptor

var file_contribution_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x73, 0x6b, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3d, 0x0a, 0x0e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x0a,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x73, 0x6b,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x73, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x72, 0x73,
	0x6b, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x42, 0x0a, 0x04, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x3a, 0x0a, 0x11, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x06,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x27, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f,
	0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0x66, 0x0a, 0x12, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x22, 0x2c, 0x0a, 0x0c, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x3c,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x73, 0x6b, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x67, 0x6f, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x22, 0x41, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x41, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xc0, 0x02, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x72, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x10, 0x02, 0x22, 0x3a, 0x0a, 0x0d, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x90, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53,
	0x70, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x73, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x14, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x73, 0x6b, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x7b, 0x0a, 0x10, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x32, 0xb0, 0x0b, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xd2, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x23, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x75, 0x92, 0x41, 0x52, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x2a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9e, 0x01, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1b,
	0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x73,
	0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x59, 0x92, 0x41, 0x3d, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73,
	0x2e, 0x2a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x72, 0x73, 0x6b,
	0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x6d, 0x92, 0x41, 0x56, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x38, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x20,
	0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x20,
	0x69, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x74, 0x6f, 0x20, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x2a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0xa8, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x92, 0x41, 0x43, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62,
	0x65, 0x65, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x2e, 0x2a, 0x12, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x8c, 0x01, 0x0a,
	0x0b, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x72,
	0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4c, 0x92,
	0x41, 0x27, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x10, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x2a, 0x0b, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a,
	0x01, 0x2a, 0x32, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0xd0, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x73, 0x6b,
	0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x92, 0x41, 0x48, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x2a, 0x16, 0x6c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xa8,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x72, 0x73,
	0x6b, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x68, 0x92, 0x41, 0x4b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2f, 0x73, 0x68,
	0x6f, 0x77, 0x20, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x64, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6d, 0x61, 0x64, 0x65, 0x20, 0x76, 0x69, 0x61, 0x20, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2a, 0x10, 0x67,
	0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x73, 0x6b, 0x2e, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x5c, 0x92, 0x41, 0x43, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20,
	0x6d, 0x61, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x63, 0x72, 0x69, 0x6d, 0x70, 0x74, 0x6f,
	0x6e, 0x2e, 0x2a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x7b, 0x92, 0x41, 0x4a, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x72, 0x3e,
	0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x12, 0x15, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x73, 0x63, 0x72, 0x69, 0x6d, 0x70, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x5a, 0x2c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x72, 0x6d, 0x61,
	0x6e, 0x73, 0x2f, 0x72, 0x73, 0x6b, 0x2d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contribution_proto_rawDescOnce sync.Once
	file_contribution_proto_rawDescData = file_contribution_proto_rawDesc
)

func file_contribution_proto_rawDescGZIP() []byte {
	file_contribution_proto_rawDescOnce.Do(func() {
		file_contribution_proto_rawDescData = protoimpl.X.CompressGZIP(file_contribution_proto_rawDescData)
	})
	return file_contribution_proto_rawDescData
}

var file_contribution_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_contribution_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_contribution_proto_goTypes = []interface{}{
	(Reward_RewardKind)(0),                   // 0: rsk.Reward.RewardKind
	(AuthorContribution_ContributionType)(0), // 1: rsk.AuthorContribution.ContributionType
	(*ListAuthorRanksRequest)(nil),           // 2: rsk.ListAuthorRanksRequest
	(*AuthorRankList)(nil),                   // 3: rsk.AuthorRankList
	(*AuthorRank)(nil),                       // 4: rsk.AuthorRank
	(*Rank)(nil),                             // 5: rsk.Rank
	(*PendingRewardList)(nil),                // 6: rsk.PendingRewardList
	(*Reward)(nil),                           // 7: rsk.Reward
	(*ClaimRewardRequest)(nil),               // 8: rsk.ClaimRewardRequest
	(*DonationArgs)(nil),                     // 9: rsk.DonationArgs
	(*ListDonationRecipientsRequest)(nil),    // 10: rsk.ListDonationRecipientsRequest
	(*DonationRecipientList)(nil),            // 11: rsk.DonationRecipientList
	(*DonationRecipient)(nil),                // 12: rsk.DonationRecipient
	(*ClaimedRewardList)(nil),                // 13: rsk.ClaimedRewardList
	(*ClaimedReward)(nil),                    // 14: rsk.ClaimedReward
	(*ListAuthorContributionsRequest)(nil),   // 15: rsk.ListAuthorContributionsRequest
	(*AuthorContributionList)(nil),           // 16: rsk.AuthorContributionList
	(*AuthorContribution)(nil),               // 17: rsk.AuthorContribution
	(*DonationStats)(nil),                    // 18: rsk.DonationStats
	(*RecipientStats)(nil),                   // 19: rsk.RecipientStats
	(*ListIncomingDonationsRequest)(nil),     // 20: rsk.ListIncomingDonationsRequest
	(*IncomingDonationList)(nil),             // 21: rsk.IncomingDonationList
	(*IncomingDonation)(nil),                 // 22: rsk.IncomingDonation
	(*Author)(nil),                           // 23: rsk.Author
	(*emptypb.Empty)(nil),                    // 24: google.protobuf.Empty
}
var file_contribution_proto_depIdxs = []int32{
	4,  // 0: rsk.AuthorRankList.rankings:type_name -> rsk.AuthorRank
	23, // 1: rsk.AuthorRank.author:type_name -> rsk.Author
	5,  // 2: rsk.AuthorRank.current_rank:type_name -> rsk.Rank
	5,  // 3: rsk.AuthorRank.next_rank:type_name -> rsk.Rank
	7,  // 4: rsk.PendingRewardList.rewards:type_name -> rsk.Reward
	0,  // 5: rsk.Reward.kind:type_name -> rsk.Reward.RewardKind
	9,  // 6: rsk.ClaimRewardRequest.donation_args:type_name -> rsk.DonationArgs
	12, // 7: rsk.DonationRecipientList.organizations:type_name -> rsk.DonationRecipient
	14, // 8: rsk.ClaimedRewardList.rewards:type_name -> rsk.ClaimedReward
	17, // 9: rsk.AuthorContributionList.contributions:type_name -> rsk.AuthorContribution
	1,  // 10: rsk.AuthorContribution.contribution_type:type_name -> rsk.AuthorContribution.ContributionType
	23, // 11: rsk.AuthorContribution.author:type_name -> rsk.Author
	19, // 12: rsk.DonationStats.stats:type_name -> rsk.RecipientStats
	22, // 13: rsk.IncomingDonationList.donations:type_name -> rsk.IncomingDonation
	15, // 14: rsk.ContributionsService.ListAuthorContributions:input_type -> rsk.ListAuthorContributionsRequest
	2,  // 15: rsk.ContributionsService.ListAuthorRanks:input_type -> rsk.ListAuthorRanksRequest
	24, // 16: rsk.ContributionsService.ListPendingRewards:input_type -> google.protobuf.Empty
	24, // 17: rsk.ContributionsService.ListClaimedRewards:input_type -> google.protobuf.Empty
	8,  // 18: rsk.ContributionsService.ClaimReward:input_type -> rsk.ClaimRewardRequest
	10, // 19: rsk.ContributionsService.ListDonationRecipients:input_type -> rsk.ListDonationRecipientsRequest
	24, // 20: rsk.ContributionsService.GetDonationStats:input_type -> google.protobuf.Empty
	20, // 21: rsk.ContributionsService.ListIncomingDonations:input_type -> rsk.ListIncomingDonationsRequest
	16, // 22: rsk.ContributionsService.ListAuthorContributions:output_type -> rsk.AuthorContributionList
	3,  // 23: rsk.ContributionsService.ListAuthorRanks:output_type -> rsk.AuthorRankList
	6,  // 24: rsk.ContributionsService.ListPendingRewards:output_type -> rsk.PendingRewardList
	13, // 25: rsk.ContributionsService.ListClaimedRewards:output_type -> rsk.ClaimedRewardList
	24, // 26: rsk.ContributionsService.ClaimReward:output_type -> google.protobuf.Empty
	11, // 27: rsk.ContributionsService.ListDonationRecipients:output_type -> rsk.DonationRecipientList
	18, // 28: rsk.ContributionsService.GetDonationStats:output_type -> rsk.DonationStats
	21, // 29: rsk.ContributionsService.ListIncomingDonations:output_type -> rsk.IncomingDonationList
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_contribution_proto_init() }
func file_contribution_proto_init() {
	if File_contribution_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contribution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthorRanksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingRewardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonationArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDonationRecipientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonationRecipientList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonationRecipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimedRewardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimedReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthorContributionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorContributionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorContribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonationStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIncomingDonationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingDonationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contribution_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingDonation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contribution_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ClaimRewardRequest_DonationArgs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contribution_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contribution_proto_goTypes,
		DependencyIndexes: file_contribution_proto_depIdxs,
		EnumInfos:         file_contribution_proto_enumTypes,
		MessageInfos:      file_contribution_proto_msgTypes,
	}.Build()
	File_contribution_proto = out.File
	file_contribution_proto_rawDesc = nil
	file_contribution_proto_goTypes = nil
	file_contribution_proto_depIdxs = nil
}
